[
["index.html", "occurrence manual Chapter 1 occurrence manual 1.1 Info 1.2 Installation", " occurrence manual built w/ rgbif v1.1.0.9113 / spocc v0.9.0 / rbison v0.7.0 built on 2019-01-17 Chapter 1 occurrence manual This book covers a suite of R packages used in working with biological occurrence data. 1.1 Info Code: https://github.com/ropensci/occurrence-manual/ Issues/Bug reports: Go to issue trackers for each package Packages rgbif: https://cran.rstudio.com/web/packages/rgbif/ spocc: https://cran.rstudio.com/web/packages/spocc/ rbison: https://cran.rstudio.com/web/packages/rbison/ rvertnet: https://cran.rstudio.com/web/packages/rvertnet/ ecoengine: https://cran.rstudio.com/web/packages/ecoengine/ auk: https://cran.rstudio.com/web/packages/auk/ 1.2 Installation Stable version from CRAN install.packages(c(&quot;rgbif&quot;, &quot;spocc&quot;, &quot;rbison&quot;, &quot;rvertnet&quot;, &quot;ecoengine&quot;, &quot;auk&quot;)) "],
["intro.html", "Chapter 2 Introduction 2.1 What is occurrence data?", " Chapter 2 Introduction 2.1 What is occurrence data? Occurrence data is … "],
["spocc.html", "Chapter 3 spocc 3.1 What is spocc? 3.2 Basic example", " Chapter 3 spocc 3.1 What is spocc? spocc is an R package that is a single user interface to occurrence data. spocc currently interfaces with ten major biodiversity repositories Global Biodiversity Information Facility (GBIF) (via rgbif) Berkeley Ecoengine (via ecoengine) iNaturalist VertNet (via rvertnet) Biodiversity Information Serving Our Nation (via rbison) eBird (via rebird) AntWeb (via AntWeb) iDigBio (via ridigbio) OBIS Atlas of Living Australia 3.2 Basic example Load spocc and request data for a given taxonomic name, for each of three different data sources, specify options across all data sources (e.g., limit number of records), and options for specific data sources (using gbifopts = list(), etc. for each data source). library(spocc) out &lt;- occ(query = &#39;Setophaga caerulescens&#39;, from = c(&#39;gbif&#39;,&#39;bison&#39;,&#39;inat&#39;), limit = 3, gbifopts = list(country = &#39;US&#39;)) Access GBIF data out$gbif #&gt; Species [Setophaga caerulescens (3)] #&gt; First 10 rows of [Setophaga_caerulescens] #&gt; #&gt; # A tibble: 3 x 67 #&gt; name longitude latitude prov issues key datasetKey publishingOrgKey #&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; #&gt; 1 Seto… -80.3 25.7 gbif cdrou… 1.81e9 50c9509d-… 28eb1a3f-1c15-4… #&gt; 2 Seto… -80.3 25.8 gbif cdrou… 1.81e9 50c9509d-… 28eb1a3f-1c15-4… #&gt; 3 Seto… -81.4 28.6 gbif cdrou… 1.84e9 50c9509d-… 28eb1a3f-1c15-4… #&gt; # … with 59 more variables: networkKeys &lt;list&gt;, installationKey &lt;chr&gt;, #&gt; # publishingCountry &lt;chr&gt;, protocol &lt;chr&gt;, lastCrawled &lt;chr&gt;, #&gt; # lastParsed &lt;chr&gt;, crawlId &lt;int&gt;, basisOfRecord &lt;chr&gt;, taxonKey &lt;int&gt;, #&gt; # kingdomKey &lt;int&gt;, phylumKey &lt;int&gt;, classKey &lt;int&gt;, orderKey &lt;int&gt;, #&gt; # familyKey &lt;int&gt;, genusKey &lt;int&gt;, acceptedTaxonKey &lt;int&gt;, #&gt; # scientificName &lt;chr&gt;, acceptedScientificName &lt;chr&gt;, kingdom &lt;chr&gt;, #&gt; # phylum &lt;chr&gt;, order &lt;chr&gt;, family &lt;chr&gt;, genus &lt;chr&gt;, #&gt; # genericName &lt;chr&gt;, specificEpithet &lt;chr&gt;, taxonRank &lt;chr&gt;, #&gt; # taxonomicStatus &lt;chr&gt;, dateIdentified &lt;chr&gt;, #&gt; # coordinateUncertaintyInMeters &lt;dbl&gt;, stateProvince &lt;chr&gt;, year &lt;int&gt;, #&gt; # month &lt;int&gt;, day &lt;int&gt;, eventDate &lt;date&gt;, modified &lt;chr&gt;, #&gt; # lastInterpreted &lt;chr&gt;, references &lt;chr&gt;, license &lt;chr&gt;, #&gt; # geodeticDatum &lt;chr&gt;, class &lt;chr&gt;, countryCode &lt;chr&gt;, country &lt;chr&gt;, #&gt; # rightsHolder &lt;chr&gt;, identifier &lt;chr&gt;, verbatimEventDate &lt;chr&gt;, #&gt; # datasetName &lt;chr&gt;, gbifID &lt;chr&gt;, verbatimLocality &lt;chr&gt;, #&gt; # collectionCode &lt;chr&gt;, occurrenceID &lt;chr&gt;, taxonID &lt;chr&gt;, #&gt; # catalogNumber &lt;chr&gt;, recordedBy &lt;chr&gt;, #&gt; # `http://unknown.org/occurrenceDetails` &lt;chr&gt;, institutionCode &lt;chr&gt;, #&gt; # rights &lt;chr&gt;, eventTime &lt;chr&gt;, occurrenceRemarks &lt;chr&gt;, #&gt; # identificationID &lt;chr&gt; Access BISON data out$bison #&gt; Species [Setophaga caerulescens (3)] #&gt; First 10 rows of [Setophaga_caerulescens] #&gt; #&gt; # A tibble: 3 x 36 #&gt; name longitude latitude prov date providedScienti… year #&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;date&gt; &lt;chr&gt; &lt;int&gt; #&gt; 1 Seto… -82.4 35.9 bison 1980-08-31 Setophaga caeru… 1980 #&gt; 2 Seto… -72.6 42.6 bison 1990-05-15 Setophaga caeru… 1990 #&gt; 3 Seto… -82.4 35.9 bison 2012-09-25 Setophaga caeru… 2012 #&gt; # … with 29 more variables: countryCode &lt;chr&gt;, ambiguous &lt;lgl&gt;, #&gt; # latlon &lt;chr&gt;, computedCountyFips &lt;chr&gt;, occurrenceID &lt;chr&gt;, #&gt; # basisOfRecord &lt;chr&gt;, providedCommonName &lt;chr&gt;, collectionID &lt;chr&gt;, #&gt; # ownerInstitutionCollectionCode &lt;chr&gt;, institutionID &lt;chr&gt;, #&gt; # computedStateFips &lt;chr&gt;, license &lt;chr&gt;, TSNs &lt;chr&gt;, providerID &lt;int&gt;, #&gt; # stateProvince &lt;chr&gt;, higherGeographyID &lt;chr&gt;, geo &lt;chr&gt;, #&gt; # provider &lt;chr&gt;, calculatedCounty &lt;chr&gt;, ITISscientificName &lt;chr&gt;, #&gt; # pointPath &lt;chr&gt;, kingdom &lt;chr&gt;, calculatedState &lt;chr&gt;, #&gt; # hierarchy_homonym_string &lt;chr&gt;, centroid &lt;chr&gt;, ITIScommonName &lt;chr&gt;, #&gt; # resourceID &lt;chr&gt;, ITIStsn &lt;chr&gt;, providedCounty &lt;chr&gt; Access iNaturalist data out$inat #&gt; Species [Setophaga caerulescens (3)] #&gt; First 10 rows of [Setophaga_caerulescens] #&gt; #&gt; # A tibble: 3 x 71 #&gt; name longitude latitude prov id observed_on description map_scale #&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;date&gt; &lt;chr&gt; &lt;int&gt; #&gt; 1 Seto… -124.169… 41.9430… inat 1.96e7 2015-02-01 &lt;NA&gt; NA #&gt; 2 Seto… -82.87262 40.0730… inat 1.96e7 2016-05-08 &lt;NA&gt; NA #&gt; 3 Seto… -71.1440… 42.3711… inat 1.96e7 2016-05-11 &lt;NA&gt; NA #&gt; # … with 63 more variables: timeframe &lt;lgl&gt;, species_guess &lt;chr&gt;, #&gt; # user_id &lt;int&gt;, taxon_id &lt;int&gt;, created_at &lt;chr&gt;, updated_at &lt;chr&gt;, #&gt; # place_guess &lt;chr&gt;, id_please &lt;lgl&gt;, observed_on_string &lt;chr&gt;, #&gt; # iconic_taxon_id &lt;int&gt;, num_identification_agreements &lt;int&gt;, #&gt; # num_identification_disagreements &lt;int&gt;, time_observed_at &lt;chr&gt;, #&gt; # time_zone &lt;chr&gt;, location_is_exact &lt;lgl&gt;, delta &lt;lgl&gt;, #&gt; # positional_accuracy &lt;int&gt;, geoprivacy &lt;chr&gt;, quality_grade &lt;chr&gt;, #&gt; # positioning_method &lt;chr&gt;, positioning_device &lt;chr&gt;, #&gt; # out_of_range &lt;lgl&gt;, license &lt;chr&gt;, uri &lt;chr&gt;, #&gt; # observation_photos_count &lt;int&gt;, comments_count &lt;int&gt;, #&gt; # zic_time_zone &lt;chr&gt;, oauth_application_id &lt;int&gt;, #&gt; # observation_sounds_count &lt;int&gt;, identifications_count &lt;int&gt;, #&gt; # captive &lt;lgl&gt;, community_taxon_id &lt;int&gt;, site_id &lt;int&gt;, #&gt; # old_uuid &lt;lgl&gt;, public_positional_accuracy &lt;int&gt;, mappable &lt;lgl&gt;, #&gt; # cached_votes_total &lt;int&gt;, last_indexed_at &lt;chr&gt;, uuid &lt;chr&gt;, #&gt; # short_description &lt;chr&gt;, user_login &lt;chr&gt;, iconic_taxon_name &lt;chr&gt;, #&gt; # tag_list &lt;chr&gt;, faves_count &lt;int&gt;, created_at_utc &lt;chr&gt;, #&gt; # updated_at_utc &lt;chr&gt;, time_observed_at_utc &lt;chr&gt;, #&gt; # owners_identification_from_vision &lt;lgl&gt;, coordinates_obscured &lt;lgl&gt;, #&gt; # taxon.id &lt;int&gt;, taxon.rank &lt;chr&gt;, taxon.ancestry &lt;chr&gt;, #&gt; # taxon.common_name.id &lt;int&gt;, taxon.common_name.name &lt;chr&gt;, #&gt; # taxon.common_name.is_valid &lt;lgl&gt;, taxon.common_name.lexicon &lt;chr&gt;, #&gt; # iconic_taxon.id &lt;int&gt;, iconic_taxon.name &lt;chr&gt;, #&gt; # iconic_taxon.rank &lt;chr&gt;, iconic_taxon.rank_level &lt;dbl&gt;, #&gt; # iconic_taxon.ancestry &lt;chr&gt;, user.login &lt;chr&gt;, #&gt; # user.user_icon_url &lt;chr&gt; "],
["rgbif.html", "Chapter 4 rgbif 4.1 What is rgbif? 4.2 Basic example", " Chapter 4 rgbif 4.1 What is rgbif? rgbif is an R package that interfaces with the GBIF (Global Biodiversity Information Facility) API (Application Programming Interface). rgbif has the following methods registry (https://www.gbif.org/developer/registry) - Metadata on datasets, and contributing organizations, installations, networks, and nodes rgbif functions: dataset_metrics(), dataset_search(), dataset_suggest(), datasets(), enumeration(), enumeration_country(), installations(), networks(), nodes(), organizations() Registry also includes the GBIF OAI-PMH service, which includes GBIF registry data only. rgbif functions: gbif_oai_get_records(), gbif_oai_identify(), gbif_oai_list_identifiers(), gbif_oai_list_metadataformats(), gbif_oai_list_records(), gbif_oai_list_sets() species (https://www.gbif.org/developer/species) - Species names and metadata rgbif functions: name_backbone(), name_lookup(), name_suggest(), name_usage() occurrences (https://www.gbif.org/developer/occurrence) - Occurrences, both for the search and download APIs rgbif functions: occ_count(), occ_data(), occ_download(), occ_download_cancel(), occ_download_cancel_staged(), occ_download_get(), occ_download_import(), occ_download_list(), occ_download_meta(), occ_get(), occ_issues(), occ_issues_lookup(), occ_metadata(), occ_search() maps (https://www.gbif.org/developer/maps) - Map API rgbif functions: map_fetch() Note: we used to have a function gbifmap() that used ggplot2 to plot data from the occurrence API, but it’s been removed - see package [mapr][] 4.2 Basic example Load rgbif xxx library(rgbif) splist &lt;- c(&#39;Accipiter erythronemius&#39;, &#39;Junco hyemalis&#39;, &#39;Aix sponsa&#39;) keys &lt;- vapply(splist, function(x) name_backbone(name = x)$speciesKey, integer(1)) occ_search(taxonKey = keys, limit = 5, hasCoordinate = TRUE) #&gt; Occ. found [2480598 (20), 9362842 (3807113), 2498387 (1246358)] #&gt; Occ. returned [2480598 (5), 9362842 (5), 2498387 (5)] #&gt; No. unique hierarchies [2480598 (1), 9362842 (1), 2498387 (1)] #&gt; No. media records [2480598 (3), 9362842 (4), 2498387 (5)] #&gt; No. facets [2480598 (0), 9362842 (0), 2498387 (0)] #&gt; Args [hasCoordinate=TRUE, limit=5, offset=0, #&gt; taxonKey=2480598,9362842,2498387, fields=all] #&gt; 3 requests; First 10 rows of data from 2480598 #&gt; #&gt; # A tibble: 5 x 91 #&gt; name key decimalLatitude decimalLongitude issues datasetKey #&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; #&gt; 1 Acci… 1.98e9 -22.4 -42.9 &quot;&quot; b1047888-… #&gt; 2 Acci… 1.00e9 -27.6 -58.7 cudc,… ad43e954-… #&gt; 3 Acci… 1.00e9 -27.9 -59.1 cudc,… ad43e954-… #&gt; 4 Acci… 1.93e9 -24.3 -48.4 cdrou… b1047888-… #&gt; 5 Acci… 6.86e8 5.27 -60.7 cdrou… e635240a-… #&gt; # … with 85 more variables: publishingOrgKey &lt;chr&gt;, networkKeys &lt;chr&gt;, #&gt; # installationKey &lt;chr&gt;, publishingCountry &lt;chr&gt;, protocol &lt;chr&gt;, #&gt; # lastCrawled &lt;chr&gt;, lastParsed &lt;chr&gt;, crawlId &lt;int&gt;, extensions &lt;chr&gt;, #&gt; # basisOfRecord &lt;chr&gt;, taxonKey &lt;int&gt;, kingdomKey &lt;int&gt;, #&gt; # phylumKey &lt;int&gt;, classKey &lt;int&gt;, orderKey &lt;int&gt;, familyKey &lt;int&gt;, #&gt; # genusKey &lt;int&gt;, speciesKey &lt;int&gt;, acceptedTaxonKey &lt;int&gt;, #&gt; # scientificName &lt;chr&gt;, acceptedScientificName &lt;chr&gt;, kingdom &lt;chr&gt;, #&gt; # phylum &lt;chr&gt;, order &lt;chr&gt;, family &lt;chr&gt;, genus &lt;chr&gt;, species &lt;chr&gt;, #&gt; # genericName &lt;chr&gt;, specificEpithet &lt;chr&gt;, taxonRank &lt;chr&gt;, #&gt; # taxonomicStatus &lt;chr&gt;, year &lt;int&gt;, month &lt;int&gt;, day &lt;int&gt;, #&gt; # eventDate &lt;chr&gt;, lastInterpreted &lt;chr&gt;, references &lt;chr&gt;, #&gt; # license &lt;chr&gt;, identifiers &lt;chr&gt;, facts &lt;chr&gt;, relations &lt;chr&gt;, #&gt; # geodeticDatum &lt;chr&gt;, class &lt;chr&gt;, countryCode &lt;chr&gt;, country &lt;chr&gt;, #&gt; # rightsHolder &lt;chr&gt;, identifier &lt;chr&gt;, nomenclaturalCode &lt;chr&gt;, #&gt; # verbatimEventDate &lt;chr&gt;, locality &lt;chr&gt;, gbifID &lt;chr&gt;, #&gt; # collectionCode &lt;chr&gt;, occurrenceID &lt;chr&gt;, catalogNumber &lt;chr&gt;, #&gt; # recordedBy &lt;chr&gt;, vernacularName &lt;chr&gt;, fieldNotes &lt;chr&gt;, #&gt; # eventTime &lt;chr&gt;, verbatimElevation &lt;chr&gt;, behavior &lt;chr&gt;, #&gt; # higherClassification &lt;chr&gt;, modified &lt;chr&gt;, created &lt;chr&gt;, #&gt; # associatedSequences &lt;chr&gt;, taxonID &lt;chr&gt;, sex &lt;chr&gt;, #&gt; # establishmentMeans &lt;chr&gt;, continent &lt;chr&gt;, institutionID &lt;chr&gt;, #&gt; # dynamicProperties &lt;chr&gt;, fieldNumber &lt;chr&gt;, language &lt;chr&gt;, #&gt; # type &lt;chr&gt;, preparations &lt;chr&gt;, occurrenceStatus &lt;chr&gt;, #&gt; # institutionCode &lt;chr&gt;, higherGeography &lt;chr&gt;, endDayOfYear &lt;chr&gt;, #&gt; # georeferenceVerificationStatus &lt;chr&gt;, datasetName &lt;chr&gt;, #&gt; # verbatimLocality &lt;chr&gt;, otherCatalogNumbers &lt;chr&gt;, #&gt; # startDayOfYear &lt;chr&gt;, accessRights &lt;chr&gt;, collectionID &lt;chr&gt; "],
["rbison.html", "Chapter 5 rbison 5.1 What is rbison? 5.2 Basic example", " Chapter 5 rbison 5.1 What is rbison? rbison is an R package that interfaces with the USGS Bison API. USGS Biodiversity Information Serving Our Nation (BISON) is a web-based federal mapping resource that provides access to georeferenced (those with latitude and longitude coordinates) and non-georeferenced data describing the occurrence or presence of terrestrial and aquatic species recorded or collected by a person (or instrument) at a specific time in the United States, U.S. Territories, U.S. Marine Exclusive Economic Zones (EEZs), and Canada. Each record in a species occurrence dataset available in BISON will typically consist of a scientific name (genus and specific epithet), a date, and one or more geographic references such as a state name, county name, and/or decimal latitude and longitude coordinates. In addition to these typical data fields, species occurrence datasets often include many other data fields that describe each species occurrence event in more detail. rbison allows one to pull species occurrence data from these datasets, inspect species occurance summaries, and then map species occurance within the US, within the contiguous 48 states, and/or at county or state level. Current data providers for BISON can be found at https://bison.usgs.gov/providers.jsp See https://bison.usgs.gov/doc/api.jsp for API docs for the BISON API. rbison has two main search functions: bison_solr(): use BISON service specific parameters plus Solr parameters. More flexible searching, and ideal for users familiar with Solr sytnax. bison(): higher level service without Solr inputs. This function, unlike bison_solr(), does have ability to search on a spatial area through the aoi parameter. see ?bison after loading the package. Make sure to run bison_datause() and bison_citation() to get the data use agreement and the appropriate citation when citing BISON data. 5.2 Basic example Load rbison library(rbison) Search for occurrences of Bison bison then plot a map out &lt;- bison(species = &quot;Helianthus annuus&quot;, count = 500) bisonmap(out) "],
["rvertnet.html", "Chapter 6 rvertnet 6.1 What is rvertnet? 6.2 Basic example", " Chapter 6 rvertnet 6.1 What is rvertnet? rvertnet is an R package for interacting with VertNet.org. VertNet.org API docs: https://github.com/VertNet/webapp/wiki/The-API-search-function 6.2 Basic example Load rvertnet library(rvertnet) Search for Aves in the state of California, limit to 10 records res &lt;- searchbyterm(class = &quot;Aves&quot;, state = &quot;California&quot;, lim = 10) metadata res$meta #&gt; NULL data. A tibble is given back: res$data #&gt; NULL Search for Mustela nigripes in the states of Wyoming or South Dakota, limit to 20 records res &lt;- searchbyterm(specificepithet = &quot;nigripes&quot;, state = &quot;(wyoming OR south dakota)&quot;, limit = 20) res$data #&gt; # A tibble: 19 x 76 #&gt; month decimallongitude startdayofyear accessrights kingdom #&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; #&gt; 1 12 -100.8276541162 336 http://vert… Animal… #&gt; 2 03 -100.9827 64 http://vert… Animal… #&gt; 3 1 -100.759483 1 http://www.… Animal… #&gt; 4 3 -100.7373 67 http://biod… Animal… #&gt; 5 11 &lt;NA&gt; 305 http://vert… Animal… #&gt; 6 10 &lt;NA&gt; 282 &lt;NA&gt; Animal… #&gt; 7 8 &lt;NA&gt; 234 &lt;NA&gt; Animal… #&gt; 8 12 &lt;NA&gt; 342 &lt;NA&gt; Animal… #&gt; 9 12 &lt;NA&gt; 358 http://www.… Animal… #&gt; 10 1 &lt;NA&gt; 1 http://vert… Animal… #&gt; 11 11 &lt;NA&gt; 313 &lt;NA&gt; Animal… #&gt; 12 9 &lt;NA&gt; 272 &lt;NA&gt; Animal… #&gt; 13 12 &lt;NA&gt; 335 &lt;NA&gt; Animal… #&gt; 14 9 &lt;NA&gt; 259 &lt;NA&gt; Animal… #&gt; 15 10 &lt;NA&gt; 297 &lt;NA&gt; Animal… #&gt; 16 12 &lt;NA&gt; 339 &lt;NA&gt; Animal… #&gt; 17 11 &lt;NA&gt; 305 &lt;NA&gt; Animal… #&gt; 18 11 &lt;NA&gt; 315 &lt;NA&gt; Animal… #&gt; 19 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; Animal… #&gt; # … with 71 more variables: verbatimcoordinatesystem &lt;chr&gt;, day &lt;chr&gt;, #&gt; # identificationverificationstatus &lt;chr&gt;, occurrenceid &lt;chr&gt;, #&gt; # identificationqualifier &lt;chr&gt;, georeferenceddate &lt;chr&gt;, #&gt; # verbatimeventdate &lt;chr&gt;, coordinateuncertaintyinmeters &lt;chr&gt;, #&gt; # higherclassification &lt;chr&gt;, sex &lt;chr&gt;, year &lt;chr&gt;, #&gt; # specificepithet &lt;chr&gt;, basisofrecord &lt;chr&gt;, geodeticdatum &lt;chr&gt;, #&gt; # occurrenceremarks &lt;chr&gt;, highergeography &lt;chr&gt;, continent &lt;chr&gt;, #&gt; # scientificname &lt;chr&gt;, language &lt;chr&gt;, institutionid &lt;chr&gt;, #&gt; # country &lt;chr&gt;, genus &lt;chr&gt;, georeferenceprotocol &lt;chr&gt;, family &lt;chr&gt;, #&gt; # stateprovince &lt;chr&gt;, county &lt;chr&gt;, phylum &lt;chr&gt;, references &lt;chr&gt;, #&gt; # georeferencedby &lt;chr&gt;, taxonrank &lt;chr&gt;, verbatimlocality &lt;chr&gt;, #&gt; # institutioncode &lt;chr&gt;, organismid &lt;chr&gt;, eventtime &lt;chr&gt;, #&gt; # preparations &lt;chr&gt;, recordedby &lt;chr&gt;, license &lt;chr&gt;, #&gt; # dynamicproperties &lt;chr&gt;, georeferenceverificationstatus &lt;chr&gt;, #&gt; # modified &lt;chr&gt;, eventdate &lt;chr&gt;, individualcount &lt;chr&gt;, #&gt; # bibliographiccitation &lt;chr&gt;, verbatimcoordinates &lt;chr&gt;, #&gt; # georeferencesources &lt;chr&gt;, catalognumber &lt;chr&gt;, locality &lt;chr&gt;, #&gt; # collectioncode &lt;chr&gt;, class &lt;chr&gt;, previousidentifications &lt;chr&gt;, #&gt; # decimallatitude &lt;chr&gt;, locationaccordingto &lt;chr&gt;, #&gt; # othercatalognumbers &lt;chr&gt;, identifiedby &lt;chr&gt;, #&gt; # nomenclaturalcode &lt;chr&gt;, order &lt;chr&gt;, enddayofyear &lt;chr&gt;, #&gt; # minimumelevationinmeters &lt;chr&gt;, associatedoccurrences &lt;chr&gt;, #&gt; # eventremarks &lt;chr&gt;, maximumelevationinmeters &lt;chr&gt;, #&gt; # samplingprotocol &lt;chr&gt;, dateidentified &lt;chr&gt;, datasetname &lt;chr&gt;, #&gt; # locationremarks &lt;chr&gt;, countrycode &lt;chr&gt;, occurrencestatus &lt;chr&gt;, #&gt; # vernacularname &lt;chr&gt;, recordnumber &lt;chr&gt;, typestatus &lt;chr&gt;, #&gt; # associatedsequences &lt;chr&gt; 6.2.1 downstream data manipulation You can pass the data object directly on to dplyr functions. Here, we get a table of record counts by species in descending order. library(&quot;dplyr&quot;) out &lt;- searchbyterm(genus = &quot;Ochotona&quot;, limit = 800) out$data %&gt;% group_by(scientificname) %&gt;% summarise(count = length(scientificname)) %&gt;% arrange(desc(count)) #&gt; # A tibble: 23 x 2 #&gt; scientificname count #&gt; &lt;chr&gt; &lt;int&gt; #&gt; 1 Ochotona princeps 428 #&gt; 2 Ochotona pallasi 129 #&gt; 3 Ochotona princeps saxatilis 104 #&gt; 4 Ochotona hyperborea 30 #&gt; 5 Ochotona dauurica 21 #&gt; 6 Ochotona (Pika) princeps Richardson, 1828 20 #&gt; 7 Ochotona collaris 15 #&gt; 8 Ochotona princeps figginsi 14 #&gt; 9 Ochotona princeps schisticeps 6 #&gt; 10 Ochotona princeps taylori 6 #&gt; # … with 13 more rows "],
["ecoengine.html", "Chapter 7 ecoengine 7.1 What is ecoengine? 7.2 Basic example", " Chapter 7 ecoengine 7.1 What is ecoengine? ecoengine is an R package xxx 7.2 Basic example Load ecoengine library(ecoengine) xxx "],
["auk.html", "Chapter 8 auk 8.1 What is auk? 8.2 Basic example", " Chapter 8 auk 8.1 What is auk? auk is an R package xxx 8.2 Basic example Load auk library(auk) xxx "],
["session-info.html", "Chapter 9 session info", " Chapter 9 session info Session info for this book sessioninfo::session_info() #&gt; ─ Session info ────────────────────────────────────────────────────────── #&gt; setting value #&gt; version R version 3.5.2 Patched (2018-12-31 r75943) #&gt; os macOS Mojave 10.14.2 #&gt; system x86_64, darwin15.6.0 #&gt; ui X11 #&gt; language (EN) #&gt; collate en_US.UTF-8 #&gt; ctype en_US.UTF-8 #&gt; tz US/Pacific #&gt; date 2019-01-17 #&gt; #&gt; ─ Packages ────────────────────────────────────────────────────────────── #&gt; package * version date lib #&gt; assertthat 0.2.0 2017-04-11 [1] #&gt; auk * 0.3.1 2018-12-07 [1] #&gt; bindr 0.1.1 2018-03-13 [1] #&gt; bindrcpp 0.2.2 2018-03-29 [1] #&gt; bookdown * 0.9.1 2019-01-10 [1] #&gt; cli 1.0.1 2018-09-25 [1] #&gt; colorspace 1.4-0 2019-01-13 [1] #&gt; crayon 1.3.4 2017-09-16 [1] #&gt; crul 0.7.0 2019-01-04 [1] #&gt; curl 3.3 2019-01-10 [1] #&gt; data.table 1.12.0 2019-01-13 [1] #&gt; digest 0.6.18 2018-10-10 [1] #&gt; dplyr 0.7.8 2018-11-10 [1] #&gt; ecoengine * 1.11.0 2018-04-25 [1] #&gt; evaluate 0.12 2018-10-09 [1] #&gt; fansi 0.4.0 2018-11-28 [1] #&gt; geoaxe 0.1.0 2016-02-19 [1] #&gt; ggplot2 3.1.0 2018-10-25 [1] #&gt; glue 1.3.0 2018-07-17 [1] #&gt; gtable 0.2.0 2016-02-26 [1] #&gt; htmltools 0.3.6 2017-04-28 [1] #&gt; httpcode 0.2.0 2016-11-14 [1] #&gt; httr 1.4.0 2018-12-11 [1] #&gt; jsonlite 1.6 2018-12-07 [1] #&gt; knitr * 1.21 2018-12-10 [1] #&gt; labeling 0.3 2014-08-23 [1] #&gt; lattice 0.20-38 2018-11-04 [1] #&gt; lazyeval 0.2.1 2017-10-29 [1] #&gt; lubridate 1.7.4 2018-04-11 [1] #&gt; magrittr 1.5 2014-11-22 [1] #&gt; mapproj 1.2.6 2018-03-29 [1] #&gt; maps 3.3.0 2018-04-03 [1] #&gt; munsell 0.5.0 2018-06-12 [1] #&gt; oai 0.2.2.9315 2018-10-29 [1] #&gt; pillar 1.3.1.9000 2018-12-29 [1] #&gt; pkgconfig 2.0.2 2018-08-16 [1] #&gt; plyr 1.8.4 2016-06-08 [1] #&gt; purrr 0.2.5 2018-05-29 [1] #&gt; R6 2.3.0 2018-10-04 [1] #&gt; rbison * 0.7.0 2018-10-24 [1] #&gt; Rcpp 1.0.0 2018-11-07 [1] #&gt; rebird 1.0.0 2018-09-27 [1] #&gt; rgbif * 1.1.0.9113 2018-12-04 [1] #&gt; rgeos 0.4-2 2018-11-08 [1] #&gt; ridigbio 0.3.5 2017-02-16 [1] #&gt; rlang 0.3.1 2019-01-08 [1] #&gt; rmarkdown 1.11.3 2019-01-14 [1] #&gt; rstudioapi 0.9.0 2019-01-09 [1] #&gt; rvertnet * 0.7.0 2018-04-17 [1] #&gt; scales 1.0.0 2018-08-09 [1] #&gt; sessioninfo 1.1.1 2018-11-05 [1] #&gt; sp 1.3-1 2018-06-05 [1] #&gt; spocc * 0.9.0 2018-11-15 [1] #&gt; stringi 1.2.4 2018-07-20 [1] #&gt; stringr 1.3.1 2018-05-10 [1] #&gt; testthat * 2.0.1 2018-10-13 [1] #&gt; tibble 2.0.1 2019-01-12 [1] #&gt; tidyselect 0.2.5 2018-10-11 [1] #&gt; triebeard 0.3.0 2016-08-04 [1] #&gt; urltools 1.7.1 2018-08-03 [1] #&gt; utf8 1.1.4 2018-05-24 [1] #&gt; whisker 0.3-2 2013-04-28 [1] #&gt; withr 2.1.2 2018-03-15 [1] #&gt; xfun 0.4 2018-10-23 [1] #&gt; xml2 1.2.0 2018-01-24 [1] #&gt; yaml 2.2.0 2018-07-25 [1] #&gt; source #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; Github (rstudio/bookdown@dc33d2f) #&gt; CRAN (R 3.5.1) #&gt; CRAN (R 3.5.2) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.2) #&gt; CRAN (R 3.5.2) #&gt; CRAN (R 3.5.2) #&gt; CRAN (R 3.5.1) #&gt; CRAN (R 3.5.0) #&gt; local #&gt; CRAN (R 3.5.0) #&gt; Github (brodieG/fansi@ab11e9c) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.1) #&gt; CRAN (R 3.5.1) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.1) #&gt; CRAN (R 3.5.1) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.2) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; local #&gt; Github (r-lib/pillar@9cc3030) #&gt; CRAN (R 3.5.1) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.1) #&gt; local #&gt; CRAN (R 3.5.1) #&gt; CRAN (R 3.5.1) #&gt; local #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.2) #&gt; Github (rstudio/rmarkdown@170d048) #&gt; CRAN (R 3.5.2) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.1) #&gt; CRAN (R 3.5.1) #&gt; CRAN (R 3.5.0) #&gt; local #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.2) #&gt; CRAN (R 3.5.1) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.1) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.1) #&gt; CRAN (R 3.5.0) #&gt; CRAN (R 3.5.1) #&gt; #&gt; [1] /Library/Frameworks/R.framework/Versions/3.5/Resources/library "]
]
